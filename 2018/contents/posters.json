{
  "stage": "prod",
  "data": [
    {
      "name": "Ryuji Tsutsui",
      "email": "ryu22e@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/c5b4d57a23b991d41ac0a89926ab4f8a?s=500",
      "location": "Kanagawa, Japan",
      "bio": "[Python Boot Camp](https://www.pycon.jp/support/bootcamp.html)コアスタッフ。\n[Shonan.py](https://shonan-py.connpass.com/)というPython勉強会を定期的に開催しています。\n普段は[株式会社クレジットエンジン](https://www.creditengine.jp/)という会社でDjangoを使ったウェブサービスの開発・運用をやっています。",
      "twitter": "ryu22e",
      "url": "https://ryu22e.org/",
      "organization": "CreditEngine, Inc.",
      "title": "Python Boot Campで全国にPythonの環を広げよう！（2018年版）",
      "abstract": "一般社団法人PyCon JPが主催するPythonの初心者向けチュートリアル「[Python Boot Camp](https://www.pycon.jp/support/bootcamp.html)（略称: PyCamp）」を紹介します。\nPython Boot Campは2016年から活動を始め、多くの参加者から好評の声をいただいています。\nこのポスターセッションを通して、今までの活動実績・開催方法などについてみなさんにお伝えしたいと思います。\n「Pythonに興味はあるけど何から始めればいいか分からない」人、「地元にPythonコミュニティを作りたい」人は、ぜひいらしてください！",
      "description": "## Python Boot Campとは何か？\nPython Boot Camp誕生の経緯、どういう趣旨なのかについて説明します。\n\n## 今までの活動実績\n今までの開催地・参加者の声について説明します。\nまた、開催後に生まれた各地のコミュニティについても紹介します。\n楽しそうにPythonを学んでいる様子を感じていただきたいと思います。\n\n## 開催方法について\n自分の街で開催したい人はどうすればいいのか説明します。\n「興味はあるけどここが不安」という人の相談も受け付けます。",
      "notes": "",
      "audience_level": "Beginner",
      "tags": "Tutorial, Event, Community"
    },
    {
      "name": "Nobuko Katayanagi",
      "email": "nbkr38@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/3e33718b9f8d71796a714cbfda7ed310?s=500",
      "location": "Tsukuba, Japan",
      "bio": "I am a soil scientist, working at an agricultural research institute in Japan. Also I am an organizer of PyLadies Tokyo since April 2015. I have used Python for data analysis since 2014.  \n農水省系研究機関にて研究に従事。2014年からデータ解析にPythonを活用。PyLadies Tokyo スタッフ（2015年4月～）。    \n",
      "twitter": "nobolis_",
      "url": "",
      "organization": "",
      "title": "Matplotlibで三角グラフを描く",
      "abstract": "三角グラフをご存知でしょうか。三角グラフは３つの要素で構成されているデータにおいて、その構成比を表す際に用いられるグラフです。本発表ではスピーカーが専門とする土壌学分野においてよく用いられる土壌の成分を可視化する土性図の作成を通してMatplotlibで三角グラフを書く方法を紹介します。",
      "description": "　Matplotlibは広く使われている可視化のためのサードパーティ製パッケージです。2次元の可視化を得意とし、グラフのさまざまな要素を柔軟に設定できます。本発表ではスピーカーが専門とする土壌学分野においてよく使われる土壌中の砂・シルト・粘土の割合を可視化する土性図の作図を一例に、Matplotlibの機能とNumpyの三角関数を駆使して三角グラフ（3つの要素で構成されているデータにおいて、その構成比を表す際に用いる）を描画する方法を紹介します。   \n\n1. 三角グラフとは（三角グラフの解説、利用事例）\n2. 土性と土性図\n3. NumpyとMatplotlib で三角グラフを描画する\n    * 三角関数おさらい\n    * グラフの枠線を描く\n    * グラフの罫線を引く\n    * 土性の分類線を引く\n    * データをプロットする\n    * プロットにラベルを付ける",
      "notes": "# 過去の発表実績\n* PyConJP2017 Lightning Talk: ギャル語ほんやく PyLadies Tokyo hack-a-thon\n*  PyConJP2015 Talk: [PyLadies Tokyo－初心者女性向けPython体験ワークショップ開催の裏側](https://pycon.jp/2015/ja/schedule/presentation/48/)\n\n# 著書（共著）\n* [PythonユーザのためのJupyter[実践]入門](http://gihyo.jp/book/2017/978-4-7741-9223-9)",
      "audience_level": "Beginner",
      "tags": "Matplotlib, trigonometric function, NumPy, Science, Python in education science and maths"
    },
    {
      "name": "MIYAZAKI Hiroaki",
      "email": "hbellstar@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/3e3177c804ab7c6918f9de67e9f8f96a?s=500",
      "location": "Unknown",
      "bio": "開発者の生産性を向上させることをミッションとしたチームを率いております。  \n基本的に開発環境の何でも屋のようなチームで、標準化チームのようでもあり、Jenkinsおじさんのようでもあり、開発者のローカル環境やシステムテスト環境の自動デプロイツールの開発チームでもあり、開発環境～デプロイ環境までのソフトウェア構成管理チームでもあり、開発サーバーの運用チームでもあります。\n\n当日は同じような領域で活躍されている方々と交流できればと思っております。\n",
      "twitter": "",
      "url": "",
      "organization": "NEC Solution Innovators, Ltd.",
      "title": "プロダクトを安定稼動させるためのソフトウェア構成管理の事例のご紹介",
      "abstract": "みなさんは Python から C など、Python 以外のコードを呼び出す OSS を利用するときに、依存関係やバージョンをどのように管理されているでしょうか。\nたとえば、PyHoge V0.1.0 は CHoge の V0.2.0 以下でないと動かない、といった場合です。\n\n適切に依存が管理されていないと、OS のセキュリティパッチの更新や、他のプロダクトのインストールなどで、簡単に依存が崩れ Python コードが動作しなくなります。\n\n今回の事例紹介では、上記の課題に対して、実際のプロジェクトとして解決した方法の解説と、解決までの経緯をご紹介させていただく予定です。",
      "description": "みなさんは Python から C など、Python 以外のコードを呼び出す OSS を利用するときに、依存関係やバージョンをどのように管理されているでしょうか。\nたとえば、PyHoge V0.1.0 は CHoge の V0.2.0 以下でないと動かない、といった場合です。\n\n適切に依存が管理されていないと、OS のセキュリティパッチの更新や、他のプロダクトのインストールなどで、簡単に依存が崩れ Python コードが動作しなくなります。\n\n今回の事例紹介では、上記の課題に対して、実際のプロジェクトとして解決した方法の解説と、解決までの経緯をご紹介させていただく予定です。\n\n発表内容は、以下の解決方法の具体的な解説となる予定です。\n\n* パッケージ管理システムをyumとpip(wheel)の２つに絞る。\n* RPMの各ライブラリのバージョンが整合するように、メタパッケージを作成する。\n* Pythonは変更が行われないようにvirtualenvにrequirements.txtでインストールし、独立させる。\n* requirements.txt(.in)とRPMメタパッケージのspecをプロダクトの同じリポジトリで管理することで、変更が漏れないようにする。\n",
      "notes": "",
      "audience_level": "Beginner",
      "tags": "Project case studies, Packaging"
    },
    {
      "name": "池田 大志",
      "email": "taishi.ikeda.0323@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/7b5bbcad8cad0559a385206fbe038744?s=500",
      "location": "Unknown",
      "bio": "奈良先端科学技術大学院大学 自然言語処理学研究室（松本研）出身。\n現在は企業にて、自然対話サービスを中心に自然言語処理に関する研究開発に従事。",
      "twitter": "",
      "url": "https://github.com/taishi-i",
      "organization": "株式会社NTTドコモ",
      "title": "NLP（自然言語処理）初心者のための単語分割/品詞タグ付けツールの紹介",
      "abstract": "現在、リカレントニューラルネットワークを用いた日本語の単語分割/品詞タグ付けツールの開発を行っています。本ツールは、これから自然言語処理を始めようと考えている Python ユーザーの方にも使いやすいツールを目指し開発されており、オープンソースの Python ライブラリとして公開中です。今回のポスターセッションでは、ツールのデモンストレーションを交えながら、システムの特徴（他の形態素解析器との差異）やディープラーニングによる自然言語処理ツールを Python ライブラリ化するために組み込んだノウハウ（前処理技術、高速化、ディープラーニングフレームワークの選定方法）についてご紹介します。",
      "description": "現在、[nagisa][site] という日本語の単語分割/品詞タグ付けツールの開発を行っています。\n本ツールは `pip install nagisa` でインストール可能であり、下記のようにシンプルな単語分割と品詞タグ付けの関数を提供します。\n\n    import nagisa\n    text = 'Pythonで簡単に使えるツールです'\n    words = nagisa.tagging(text)\n    print(words)\n    #=> Python/名詞 で/助詞 簡単/形状詞 に/助動詞 使える/動詞 ツール/名詞 です/助動詞\n\n[site]: https://github.com/taishi-i/nagisa\n\n今回のポスターセッションでは、ツールのデモンストレーションを交えながら、下記の項目についてご紹介します。\n\nシステムの特徴\n-----------------------\n-   開発方針\n-   想定ユーザ：なぜ NLP（自然言語処理）初心者のためのツールなのか？\n-   他の形態素解析器との差異：既存の形態素解析器（MeCab、 janome、JUMAN++、 KyTea、 Sudachi）の説明と本ツールとの差分\n-   複数の後処理機能：ユーザーによる出力単語の微調整や品詞による出力単語のフィルタリングが可能\n\nPython ライブラリ化するために組み込んだノウハウ\n-------------------------------------------------------------------------\n-   前処理技術：日本語言語処理のための前処理 Tips\n-   高速化：Cython による前処理の高速化\n-   ディープラーニングフレームワークの選定方法：[DyNet][dynet] を採用した理由\n\n[dynet]: https://github.com/clab/dynet",
      "notes": "これまでの主な発表履歴\n-----------------------------------\n*   情報処理学会 第228回自然言語処理研究会（Encoder-Decoderモデルを用いた日本語崩れ表記の正規化）\n*   The 2nd Workshop on Noisy User-generated Text ( Japanese Text Normalization with Encoder-Decoder Model )\n*   言語処理学会第23回年次大会 (辞書情報と単語分散表現を組み込んだリカレントニューラルネットワークによる日本語単語分割)\n*   言語処理学会第24回年次大会ワークショップ 形態素解析の今とこれから (RNNを用いた日本語単語分割/品詞タグ付けツールの紹介) ",
      "audience_level": "Beginner",
      "tags": "Machine learning and data science"
    },
    {
      "name": "Marc-Andre Lemburg",
      "email": "marc-andre@p9ft.com",
      "avatar": "https://secure.gravatar.com/avatar/6b3dec5506b5d102cd676aa4e92e54d6?s=500",
      "location": "Unknown",
      "bio": "Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of Düsseldorf.\n\nHis work with and for Python started in 1994. He is a Python Core Developer, designed and implemented the Unicode support in Python 2.0, and author of the mx Extensions, e.g. mxTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com.\n\nMarc-Andre is EuroPython Society (EPS) Chair, a Python Software Foundation (PSF) founding Fellow and co-founded a local Python meeting in Düsseldorf (PyDDF). He served on the board of the PSF and EPS for many terms and loves to contribute to the growth of Python where ever he can.\n\nMore information is available on http://malemburg.com/",
      "twitter": "malemburg",
      "url": "http://malemburg.com/",
      "organization": "MUFG Investor Services",
      "title": "Python in Finance: Circle in MUFG Investor Services",
      "abstract": "Python in the Enterprise: See how Python drives fund management and supports business process outsourcing at MUFG Investor Services, moving billions each day.",
      "description": "MUFG Investor Services has partnered with Point Nine Limited to leverage the Python based solution Circle in their operations and for business clients.\n\nCircle is a middle office management solution, built from ground up in Python and using web technologies to deliver efficient, flexible and scalable systems for internal and client facing solutions.\n\nWith the poster, we are going to explain how the technology works, where we see the benefits of using Python for integration, fast adaptation and flexible configurations, and give an insight into the workings of fund managers, administrators and investors.\n",
      "notes": "",
      "audience_level": "All",
      "tags": "Web programming including frameworks (Django / Flask / Pylons etc.), Fintech, Best practices, Project case studies"
    },
    {
      "name": "まーや(Maaya)",
      "email": "huki.j37@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/2c7e3274ec7ba4775af6ac45dfc4757e?s=500",
      "location": "Tokyo, Japan",
      "bio": "- PyLadies Tokyo organizer\n- Microsoft MVP 2017 (for Azure)\n- 職業はクラウドソリューションアーキテクト\n- ディズニー大好きすぎ\n- 週末フラダンサーの人",
      "twitter": "maaya8585",
      "url": "https://hotchpotchj37.wordpress.com/",
      "organization": "PyLadies Tokyo",
      "title": "ばーちゃんとAlexa × チャットを実現した話",
      "abstract": "Amazon Alexaとslackを繋いでコミュニケーションできるようなシステムを即席で作りました。このシステムのアーキテクチャやハマりどころについてお話予定です。(準備が整えば当日demoしたいと思います)。",
      "description": "- メールができないので電話したい祖母\n- 仕事中電話が取りづらいので文字チャットしたい私\n- でも二人で連絡を取りたい\n\nという要望を叶えるべくAlexaとslackを繋いでコミュニケーションできるようなシステムを即席で作りました。    \n\n- 実際に組んだシステム\n    - Raspberry Pi に Amazon Voice Serviceを入れる\n    - Alexaからslackへ文字列を送信\n    - slackから文字を送信 -> Raspberry Piで発話\n\n- 使った技術\n    - Python3.6\n    - Raspberry Pi\n    - Tornado\n    - AWS\n        - Lambda\n        - S3\n    - Amazon Voice Service\n    - Amazon Echo カスタムスキル   etc.\n\nこのシステムのアーキテクチャやハマりどころについてお話予定です。(準備が整えば当日demoしたいと思います)。    ",
      "notes": "- Pythonのコードレベルは初心者級の内容です。色々なシステムと接続するアーキテクチャのお話がメインとなる為聴講者レベルを中級者に設定しています。\n- アーキテクチャのお話多めです。",
      "audience_level": "Intermediate",
      "tags": "Web programming including frameworks (Django / Flask / Pylons etc.), Project case studies, Python libraries extending and embedding python in hardware"
    },
    {
      "name": "斉藤努",
      "email": "tsutomu.saito@beproud.jp",
      "avatar": "https://secure.gravatar.com/avatar/2d809ee0ed9c9c3a33e93486be7d8cf4?s=500",
      "location": "Unknown",
      "bio": "",
      "twitter": "",
      "url": "",
      "organization": "BeProud",
      "title": "データ分析ライブラリを用いた最適化モデル",
      "abstract": "効率よく移動したい、効率よく物を詰め込みたいなどの悩みを解決するのが最適化手法です。\nデータ分析ライブラリのpandasを使うと、分かりやすい最適化のモデルが作成できます。\nPuLPを使うと、最適化のモデルを解いて解決方法を求めることができます。\n全て、Pythonで無料で簡単に実行できます。",
      "description": "- 最適化とは\n- pandasとは\n- PuLPとは\n- 問題の説明\n- pandasとPuLPによる最適化モデル\n- 実行と結果の確認",
      "notes": "",
      "audience_level": "Advanced",
      "tags": "pandas, modeling, optimization, pulp"
    },
    {
      "name": "driller",
      "email": "eleshis@gmail.com",
      "avatar": "https://secure.gravatar.com/avatar/70594e67eea4cf12f9b6aacc589d7465?s=500",
      "location": "Tokyo",
      "bio": "# About me(us)\n\nfin-pyを主催しています。このプロポーサルではチーム(コミュニティ)として参加します。\n\n# Target\n\n* 金融に興味があるor強くなりたいエンジニア\n* 金融関係者でPythonを使ってみたい\n* Python、金融関連でリレーションを深めたい",
      "twitter": "patraqushe",
      "url": "https://github.com/fin-py/guideline",
      "organization": "fin-py",
      "title": "Python x 金融のコミュニティ fin-pyの活動事例",
      "abstract": "Pythonを使うとさまざまな金融情報が扱えます。これまでのfin-pyで活動から、年金や仮想通貨税金など、身近なものを中心にご紹介します。",
      "description": "### fin-pyについて\n\nfin-pyはPythonと金融のコミュニティです。\n年金や税金など、身近なネタからデリバティブなどの専門的なネタまで、金融についてのさまざまな分野でPythonを活用しています。\n\n### 活動概要\n\n月に1回程度、下記のようなイベントを実施しています。\n\n* もくもく会\n* fin-py study\n* LT大会\n\n### 展示概要\n\n上記活動内容から、身近で役立つ金融情報をPythonを使った事例を交えてご紹介します。",
      "notes": "近年、金融業界でもPythonを扱う事例が増えてきました。個人でもマネーマネジメントや決済などでFinTechを活用する需要が増えてきています。\nしかしながら、Pythonを活用してどのようなことができるのか、Pythonのコードを書けるが金融の知見がないために、この分野での活用方法がわからないというエンジニアの声をよくきいています。\n金融の分野に詳しくないかた、苦手な方でも、エンジニア的なアプローチから金融に対する理解を深めていただけると幸甚です。",
      "audience_level": "All",
      "tags": "finance, lifehack"
    },
    {
      "name": "うさたーん",
      "email": "yamada@t-rpg.info",
      "avatar": "https://secure.gravatar.com/avatar/debf96584dd258cf9e7a67e31e1f3ce0?s=500",
      "location": "Unknown",
      "bio": "Webサイト改善のPDCAを支援する会社にてインフラを担当しています。\n日本の Sphinx コミュニティ「Sphinx-Users.JP」にて活動中。\n\n- 執筆\n    - O'Reilly Japan 「Sphinxをはじめよう」\n    - 技術評論社 Software Design 「Sphinx で始めるドキュメント作成術 第6回、第7回」\n",
      "twitter": "usaturn",
      "url": "http://blog.usaturn.net/",
      "organization": "sphinx-users.jp",
      "title": "ドキュメンテーションビルダー「Sphinx」をはじめよう",
      "abstract": "体裁の整ったドキュメントを簡単に作成することができるドキュメンテーションツールを探している方へ Sphinx を紹介します。\nSphinx は HTML、XML、TeX 等よりも簡易なマークアップ言語を使い、まとまったドキュメントを作成する事ができます。",
      "description": "ポスターセッションでは、Sphinx ドキュメントの作成の流れや、どのような事ができるのかをご紹介します。\n",
      "notes": "",
      "audience_level": "Beginner",
      "tags": "Sphinx"
    },
    {
      "name": "積雪メソッド, Snowfall Accumulation",
      "email": "arlo.emerson@sekisetsumethod.com",
      "avatar": "https://papercallio-production.s3.amazonaws.com/uploads/user/avatar/28878/arlo_emerson_profile_2018.jpg",
      "location": "Seattle",
      "bio": "###ありがとうございます\nThank you for your consideration. I truly hope to speak at your conference. I think it will be fun and I hope to learn from this audience. ",
      "twitter": "sekisetsumethod",
      "url": "https://www.sekisetsumethod.com/",
      "organization": "",
      "title": "積雪メソッド, Snowfall Accumulation",
      "abstract": "What if you could predict market moves using Python and OHLC data? As a coder/trader I have been predicting USDJPY moves for many years. One day while coding a market simulation on a beach in Maui, I discovered an astounding phenomenon.",
      "description": "> One day while coding a market simulation on a beach in Maui, I discovered an astounding phenomenon.\n#積雪メソッド, Snowfall Accumulation\n\n###What if you could predict market moves using Python and OHLC data?\n\nAs a coder/trader I have been predicting USDJPY moves for many years. One day while coding a market simulation on a beach in Maui, I discovered an astounding phenomenon: particle accumulation upon a 2D surface constructed from OHLC data can reasonably predict actual future price action. How can this be possible? I believe the answer lies with nature and the tendency for systems to self balance. In short, particles accumulate wherever geometries may entrap them. I call this 積雪メソッド, Snowfall Accumulation\n\nIn my presentation I show all source code and I perform real-time physics simulations using PyGame and ExtremePhysics libraries, using Python 2.7, to simulate particle accumulation upon a price action pattern, i.e. an OHLC chart, where particle accumulation on both buying and selling sides exposes the market maker's positions. I do all this with real-time trading data, using only one computer, and free data. Inexplicably, I will admit, I am able to reasonably predict many USDJPY moves using this method. To me, the connection to physics is what makes this information most interesting. I encourage other coder/traders to explore this phenomenon which I have entitled 積雪メソッド, Snowfall Accumulation. Perhaps ultimately chaos rules the larger game. I do not know. But I do offer free source code available on github and insights into why the methods I have developed over the past 15 years may be of value to Python coders and currency traders. \n[Look at my simulations and see for yourself](https://twitter.com/sekisetsumethod/status/987554466067955712)\n\n[How to use the Sekisetsu Method](https://www.sekisetsumethod.com/home/2018/4/14/what-is-the-sekisetsu-method)\n\n[The Sekisetsu Method exposes the intention of large positions]\n(https://www.sekisetsumethod.com/home/2018/4/22/the-sekisetsu-method-exposes-the-intention-of-large-positions)\n\n[How to use the Sekisetsu Method to enter trades]\n(https://www.sekisetsumethod.com/home/2018/4/14/what-is-the-sekisetsu-method-3dnyd)",
      "notes": "こんにちは...My name is Arlo Emerson, I have been to Japan twice, once in 2011 (during 東北地方太平洋沖地震, in Akasaka Tokyo) and again in 2014, I stayed in 名古屋. \n\nI love Japan. And I love Python. And I love trading USDJPY. \n\nI would like to visit and give my presentation. I will show my actual real-time simulations of USDJPY market predictions. It is strange stuff, but also very scientific. [I provide all source code and tools free](https://github.com/sekisetsu-method). I have no products to sell. This is all Python + USDJPY. \n\n\n",
      "audience_level": "Advanced",
      "tags": "Python, USDJPY, forex, trading, physics"
    }
  ]
}